@startuml thux
' eventは各自のオブジェクトが持ちたい

package Window {
    class GLFWWindow {
        emscriptenの場合不要
    }
    GLFWWindow "1" -> "1" Window

    class Window {
    }
}

package Scene {
    class Scene::Manager {
        Transition()
    }
    Scene "1" -> "1" Scene::Manager
    Keyboard "1" --o "n" Scene
    
    class Scene::Render {
        loop()
    }
    Window "1" --> "1" Scene::Render
    Scene::Manager "1" -> Scene::Render

    SceneInterface <|- Scene
    interface SceneInterface {
        update() // update thread
        draw() // draw thread
    }
}

class Signal {

}
Signal "n" o- "1" Slot

class Slot {

}

package Keyboard {

    Keyboard <- Signal
    class Keyboard {
        pressed<Key>(function())
        press()
    }
    
    class Key {
        enum
    }
}

package Geometry {
    class Geometry {
        array<Point, n> points
        array<Primitive, n> primitives
        array<Attribute, n> attributes
    }
    Scene o-- Geometry

    Geometry o-- Attribute


    class Attribute {
        pair<string name, T> value
    }

    class Point {
        vec position
        Attribnute number
        Map<Attribute, Name> customAttribute
    }
    Attribute <|-- Point

    class Primitive {
        array vercitesTriangle<Vertex, 3>
        array vercitesRectangle<Vertex, 4>
        Attribnute number
        Map<Attribute, Name> customAttribute
    }
    Attribute <|-- Primitive

    class Vertex {
        vec position
    }
    Vertex -o Primitive
    ' Vertex <|- Attribute
}
@enduml